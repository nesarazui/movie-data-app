[{"/Users/nesarakishor/Desktop/YearOne/movie-data-app/src/Components/MovieSearch.js":"1","/Users/nesarakishor/Desktop/YearOne/movie-data-app/src/Components/DisplayMovieTitles.js":"2","/Users/nesarakishor/Desktop/YearOne/movie-data-app/src/index.js":"3","/Users/nesarakishor/Desktop/YearOne/movie-data-app/src/Components/SingleMovieData.js":"4","/Users/nesarakishor/Desktop/YearOne/movie-data-app/src/App.js":"5"},{"size":2986,"mtime":1606949458833,"results":"6","hashOfConfig":"7"},{"size":1856,"mtime":1606943443827,"results":"8","hashOfConfig":"7"},{"size":553,"mtime":1606330102034,"results":"9","hashOfConfig":"7"},{"size":1723,"mtime":1606946706463,"results":"10","hashOfConfig":"7"},{"size":216,"mtime":1606850304876,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"1pqu6x5",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"/Users/nesarakishor/Desktop/YearOne/movie-data-app/src/Components/MovieSearch.js",["25","26"],"import React, { useState, useCallback } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport DisplayMovieTitles from './DisplayMovieTitles'\nimport axios from 'axios'\n\n//This function component renders a search bar where a user can type in the title of a movie.\n//Rather than use a class component to handle user input through a form, the useState React Hook is used.\nconst MovieSearch = () => {\n    const [searchState, setSearchState] = useState({title: '', titleResults: []})\n\n    const handleChange = (event) => {\n        setSearchState({...searchState, title: event.target.value})\n        let nextValue = event.target.value\n        debouncedRequestOMDBAPI(nextValue);\n    }\n\n    const debounce = (callback, time) => {\n        let timeoutPointer;\n        return () => {\n            const context = this;\n            clearTimeout(timeoutPointer);\n            timeoutPointer = setTimeout(callback.bind(context), time)       \n        }\n    }\n\n    const requestOMDBAPI = (nextValue) => {\n        console.log('making request!')\n      axios.request(`http://www.omdbapis.com/?i=tt3896198&apikey=6befe58e&s=${nextValue}`).then(function (response) {\n          const movieInfo = response.data.Search\n          console.log('did we get the movie info: ', movieInfo)\n          //setSearchState({...searchState, titleResults: movieInfo})\n      }).catch(function (error) {\n          console.error(error);\n      });\n      //setSearchState({...searchState, title: ''})\n    }\n\n    const debouncedRequestOMDBAPI =  useCallback(debounce( (nextValue) => requestOMDBAPI(nextValue),1000),[]);\n\n\n\n    //Call is made to the third-party API OMDBAPI, which queries the database to pull results that contain the user-input title within it. \n    //Data is returned as an array of objects\n    // const handleSubmit = (event) => {\n    //       axios.request(`http://www.omdbapi.com/?i=tt3896198&apikey=6befe58e&s=${searchState.title}`).then(function (response) {\n    //           const movieInfo = response.data.Search\n    //           setSearchState({...searchState, titleResults: movieInfo})\n    //       }).catch(function (error) {\n    //           console.error(error);\n    //       });\n    //       setSearchState({...searchState, title: ''})\n    //       event.preventDefault()\n    // }\n\n\n    //Renders the search bar and calls the DisplayMovieTitles component, passing the titleResults (array of objects) as a prop to the component.\n    return(\n        <div>\n          <Form>\n              <Form.Label>Search IMDB</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"search\" value={searchState.title} onChange={handleChange} />\n              {/* <Button type=\"submit\"> Submit </Button> */}\n              {/* <Form.Text className=\"text-muted\">\n                  Search for a movie to find more information \n              </Form.Text> */}\n          </Form>\n          <DisplayMovieTitles titleResults={searchState.titleResults}/>\n        </div>\n    )\n}\n\nexport default MovieSearch;\n\n\n","/Users/nesarakishor/Desktop/YearOne/movie-data-app/src/Components/DisplayMovieTitles.js",[],"/Users/nesarakishor/Desktop/YearOne/movie-data-app/src/index.js",[],["27","28"],"/Users/nesarakishor/Desktop/YearOne/movie-data-app/src/Components/SingleMovieData.js",["29","30"],"/Users/nesarakishor/Desktop/YearOne/movie-data-app/src/App.js",["31"],"import logo from './logo.svg';\nimport './App.css';\nimport MovieSearch from './Components/MovieSearch'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <MovieSearch />\n    </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"32","severity":1,"message":"33","line":2,"column":16,"nodeType":"34","messageId":"35","endLine":2,"endColumn":22},{"ruleId":"36","severity":1,"message":"37","line":38,"column":38,"nodeType":"34","endLine":38,"endColumn":49},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"32","severity":1,"message":"42","line":1,"column":17,"nodeType":"34","messageId":"35","endLine":1,"endColumn":25},{"ruleId":"32","severity":1,"message":"43","line":3,"column":10,"nodeType":"34","messageId":"35","endLine":3,"endColumn":15},{"ruleId":"32","severity":1,"message":"44","line":1,"column":8,"nodeType":"34","messageId":"35","endLine":1,"endColumn":12},"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","no-native-reassign",["45"],"no-negated-in-lhs",["46"],"'useState' is defined but never used.","'Route' is defined but never used.","'logo' is defined but never used.","no-global-assign","no-unsafe-negation"]