[{"/Users/nesarakishor/Desktop/YearOne/movie-data-app/src/Components/MovieSearch.js":"1","/Users/nesarakishor/Desktop/YearOne/movie-data-app/src/Components/DisplayMovieTitles.js":"2","/Users/nesarakishor/Desktop/YearOne/movie-data-app/src/index.js":"3","/Users/nesarakishor/Desktop/YearOne/movie-data-app/src/Components/SingleMovieData.js":"4","/Users/nesarakishor/Desktop/YearOne/movie-data-app/src/App.js":"5","/Users/nesarakishor/Desktop/YearOne/movie-data-app/src/Components/MovieRatings.js":"6","/Users/nesarakishor/Desktop/YearOne/movie-data-app/src/Components/NavBar.js":"7","/Users/nesarakishor/Desktop/YearOne/movie-data-app/src/components/SingleMovieData.js":"8","/Users/nesarakishor/Desktop/YearOne/movie-data-app/src/components/DisplayMovieTitles.js":"9","/Users/nesarakishor/Desktop/YearOne/movie-data-app/src/components/MovieRatings.js":"10","/Users/nesarakishor/Desktop/YearOne/movie-data-app/src/components/NavBar.js":"11","/Users/nesarakishor/Desktop/YearOne/movie-data-app/src/components/MovieSearch.js":"12"},{"size":2536,"mtime":1607044952959,"results":"13","hashOfConfig":"14"},{"size":1354,"mtime":1607045222638,"results":"15","hashOfConfig":"14"},{"size":266,"mtime":1607050498709,"results":"16","hashOfConfig":"14"},{"size":6597,"mtime":1607045643402,"results":"17","hashOfConfig":"14"},{"size":737,"mtime":1607054691291,"results":"18","hashOfConfig":"14"},{"size":5128,"mtime":1607050412650,"results":"19","hashOfConfig":"14"},{"size":389,"mtime":1607050229065,"results":"20","hashOfConfig":"14"},{"size":7369,"mtime":1607053027699,"results":"21","hashOfConfig":"14"},{"size":1369,"mtime":1607054817440,"results":"22","hashOfConfig":"14"},{"size":5160,"mtime":1607053725578,"results":"23","hashOfConfig":"14"},{"size":389,"mtime":1607053474668,"results":"24","hashOfConfig":"14"},{"size":2603,"mtime":1607060556007,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"1pqu6x5",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"33"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/nesarakishor/Desktop/YearOne/movie-data-app/src/Components/MovieSearch.js",["56"],"import React, { useState, useCallback } from \"react\";\nimport { Form, Container } from \"react-bootstrap\";\nimport DisplayMovieTitles from \"./DisplayMovieTitles\";\nimport axios from \"axios\";\nimport { debounce } from \"lodash\";\n\n/* This component renders a search bar where a user can type in the title of a movie in order to pull up matching results from the IMDB database (using the third-party API 'OMDBAPI')\nState is handled in this function component using the useState React Hook: \"title\" (reflects the user input text) and \"titleResults\" (initially undefined and then updated to an array with the response data).\nWithin the requestOMDBAPI function, a check is done to ensure that if there are no matching results from the database (response.data.Error)), 'titleResults' will be updated with an empty array.\nDebouncing is being utilized to prevent an API call being made on every key stroke.\nThe DisplayMovieTitles component will only be rendered if there are movie results (titleResults is updated to an array with data, or an empty array) */\n\nconst MovieSearch = () => {\n  const [searchState, setSearchState] = useState({\n    title: \"\",\n    titleResults: undefined,\n  });\n\n  const handleChange = (event) => {\n    let nextValue = event.target.value;\n    setSearchState({ ...searchState, title: nextValue });\n    debouncedRequestOMDBAPI(nextValue);\n  };\n\n  const requestOMDBAPI = async (nextValue) => {\n    try {\n      const response = await axios.get(\n        `http://www.omdbapi.com/?apikey=6befe58e&s=${nextValue}`\n      );\n      if (response.data.Error) {\n        setSearchState({ ...searchState, titleResults: [] });\n        return;\n      }\n      const movieInfo = response.data.Search;\n      setSearchState({ ...searchState, titleResults: movieInfo });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const debouncedRequestOMDBAPI = useCallback(\n    debounce((nextValue) => requestOMDBAPI(nextValue), 1000),\n    []\n  );\n\n  //Renders the search bar and calls the DisplayMovieTitles component, passing the titleResults (array of objects) as a prop to the component.\n  return (\n    <Container>\n      <Form>\n        <Form.Control\n          column=\"lg\"\n          type=\"text\"\n          placeholder=\"Search For A Movie...\"\n          value={searchState.title}\n          onChange={handleChange}\n          className=\"mt-5 mb-5\"\n        />\n      </Form>\n      {searchState.titleResults && (\n        <DisplayMovieTitles titleResults={searchState.titleResults} />\n      )}\n    </Container>\n  );\n};\n\nexport default MovieSearch;\n","/Users/nesarakishor/Desktop/YearOne/movie-data-app/src/Components/DisplayMovieTitles.js",[],"/Users/nesarakishor/Desktop/YearOne/movie-data-app/src/index.js",[],["57","58"],"/Users/nesarakishor/Desktop/YearOne/movie-data-app/src/Components/SingleMovieData.js",["59"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useLocation, useHistory } from \"react-router\";\nimport { Container, Button, Card, ListGroup } from \"react-bootstrap\";\n\n/* This component retrieves the movie data object sent via Link from the DisplayMovieTitles component by using useLocation(). A call is made to OMDBAPI (with the match by ID query) using the omdbID from the movie object. The response data includes additional information about the movie, including director, plot, etc). This data gets stored under the 'selectedMovie' state,\nwhich is then used to render the specfic details about the movie: (title, director, release year, plot, etc).\nThere is also an option to give a 'thumbs up' or 'thumbs down' rating. The rating is coded as upRating/downRating and sent along with the movie object as a POST request to the backend to update the database accordingly.\n */\n\nconst SingleMovieData = (props) => {\n  const [selectedMovie, setSelectedMovie] = useState({});\n  const location = useLocation();\n  const history = useHistory();\n  const movieObj = location.state.movieObj;\n  console.log(\"comments: \", movieObj);\n\n  useEffect(() => {\n    const getFullData = async (movieObj) => {\n      console.log(\"does this happen first\", movieObj);\n      try {\n        const response = await axios.get(\n          `http://www.omdbapi.com/?apikey=6befe58e&i=${movieObj.imdbID}`\n        );\n        const fullMovieData = response.data;\n        setSelectedMovie(fullMovieData);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    getFullData(movieObj);\n  }, []);\n\n  const recordRating = async (ratingType) => {\n    try {\n      await axios.post(\"http://localhost:8080/movieData/\", {\n        ratingType,\n        selectedMovie,\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const returnToSearch = () => {\n    history.goBack();\n  };\n\n  return (\n    <Container>\n      <Card className=\"mt-5 mb-5\">\n        <Card.Header>Movie Details</Card.Header>\n        <ListGroup variant=\"flush\">\n          <ListGroup.Item>\n            <b>Title:</b> {selectedMovie.Title}\n          </ListGroup.Item>\n          <ListGroup.Item>\n            <b>Director:</b> {selectedMovie.Director}\n          </ListGroup.Item>\n          <ListGroup.Item>\n            <b>Release Year:</b> {selectedMovie.Year}\n          </ListGroup.Item>\n          <ListGroup.Item>\n            <b>Plot:</b> {selectedMovie.Plot}\n          </ListGroup.Item>\n        </ListGroup>\n      </Card>\n      <Button\n        variant=\"outline-success\"\n        className=\"mr-2\"\n        onClick={() => {\n          recordRating(\"upRatings\");\n        }}\n      >\n        <svg\n          width=\"1em\"\n          height=\"1em\"\n          viewBox=\"0 0 16 16\"\n          class=\"bi bi-hand-thumbs-up\"\n          fill=\"currentColor\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            fill-rule=\"evenodd\"\n            d=\"M6.956 1.745C7.021.81 7.908.087 8.864.325l.261.066c.463.116.874.456 1.012.965.22.816.533 2.511.062 4.51a9.84 9.84 0 0 1 .443-.051c.713-.065 1.669-.072 2.516.21.518.173.994.681 1.2 1.273.184.532.16 1.162-.234 1.733.058.119.103.242.138.363.077.27.113.567.113.856 0 .289-.036.586-.113.856-.039.135-.09.273-.16.404.169.387.107.819-.003 1.148a3.163 3.163 0 0 1-.488.901c.054.152.076.312.076.465 0 .305-.089.625-.253.912C13.1 15.522 12.437 16 11.5 16v-1c.563 0 .901-.272 1.066-.56a.865.865 0 0 0 .121-.416c0-.12-.035-.165-.04-.17l-.354-.354.353-.354c.202-.201.407-.511.505-.804.104-.312.043-.441-.005-.488l-.353-.354.353-.354c.043-.042.105-.14.154-.315.048-.167.075-.37.075-.581 0-.211-.027-.414-.075-.581-.05-.174-.111-.273-.154-.315L12.793 9l.353-.354c.353-.352.373-.713.267-1.02-.122-.35-.396-.593-.571-.652-.653-.217-1.447-.224-2.11-.164a8.907 8.907 0 0 0-1.094.171l-.014.003-.003.001a.5.5 0 0 1-.595-.643 8.34 8.34 0 0 0 .145-4.726c-.03-.111-.128-.215-.288-.255l-.262-.065c-.306-.077-.642.156-.667.518-.075 1.082-.239 2.15-.482 2.85-.174.502-.603 1.268-1.238 1.977-.637.712-1.519 1.41-2.614 1.708-.394.108-.62.396-.62.65v4.002c0 .26.22.515.553.55 1.293.137 1.936.53 2.491.868l.04.025c.27.164.495.296.776.393.277.095.63.163 1.14.163h3.5v1H8c-.605 0-1.07-.081-1.466-.218a4.82 4.82 0 0 1-.97-.484l-.048-.03c-.504-.307-.999-.609-2.068-.722C2.682 14.464 2 13.846 2 13V9c0-.85.685-1.432 1.357-1.615.849-.232 1.574-.787 2.132-1.41.56-.627.914-1.28 1.039-1.639.199-.575.356-1.539.428-2.59z\"\n          />\n        </svg>\n      </Button>\n      <Button\n        variant=\"outline-danger\"\n        onClick={() => {\n          recordRating(\"downRatings\");\n        }}\n      >\n        <svg\n          width=\"1em\"\n          height=\"1em\"\n          viewBox=\"0 0 16 16\"\n          class=\"bi bi-hand-thumbs-down\"\n          fill=\"currentColor\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            fill-rule=\"evenodd\"\n            d=\"M6.956 14.534c.065.936.952 1.659 1.908 1.42l.261-.065a1.378 1.378 0 0 0 1.012-.965c.22-.816.533-2.512.062-4.51.136.02.285.037.443.051.713.065 1.669.071 2.516-.211.518-.173.994-.68 1.2-1.272a1.896 1.896 0 0 0-.234-1.734c.058-.118.103-.242.138-.362.077-.27.113-.568.113-.857 0-.288-.036-.585-.113-.856a2.094 2.094 0 0 0-.16-.403c.169-.387.107-.82-.003-1.149a3.162 3.162 0 0 0-.488-.9c.054-.153.076-.313.076-.465a1.86 1.86 0 0 0-.253-.912C13.1.757 12.437.28 11.5.28v1c.563 0 .901.272 1.066.56.086.15.121.3.121.416 0 .12-.035.165-.04.17l-.354.353.353.354c.202.202.407.512.505.805.104.312.043.44-.005.488l-.353.353.353.354c.043.043.105.141.154.315.048.167.075.37.075.581 0 .212-.027.415-.075.582-.05.174-.111.272-.154.315l-.353.353.353.354c.353.352.373.714.267 1.021-.122.35-.396.593-.571.651-.653.218-1.447.224-2.11.164a8.907 8.907 0 0 1-1.094-.17l-.014-.004H9.62a.5.5 0 0 0-.595.643 8.34 8.34 0 0 1 .145 4.725c-.03.112-.128.215-.288.255l-.262.066c-.306.076-.642-.156-.667-.519-.075-1.081-.239-2.15-.482-2.85-.174-.502-.603-1.267-1.238-1.977C5.597 8.926 4.715 8.23 3.62 7.93 3.226 7.823 3 7.534 3 7.28V3.279c0-.26.22-.515.553-.55 1.293-.138 1.936-.53 2.491-.869l.04-.024c.27-.165.495-.296.776-.393.277-.096.63-.163 1.14-.163h3.5v-1H8c-.605 0-1.07.08-1.466.217a4.823 4.823 0 0 0-.97.485l-.048.029c-.504.308-.999.61-2.068.723C2.682 1.815 2 2.434 2 3.279v4c0 .851.685 1.433 1.357 1.616.849.232 1.574.787 2.132 1.41.56.626.914 1.28 1.039 1.638.199.575.356 1.54.428 2.591z\"\n          />\n        </svg>\n      </Button>\n      <div className=\"mt-3\">\n        <Button variant=\"outline-primary\" onClick={returnToSearch}>\n          Return To Homepage\n        </Button>\n      </div>\n    </Container>\n  );\n};\n\nexport default SingleMovieData;\n",["60","61"],"/Users/nesarakishor/Desktop/YearOne/movie-data-app/src/App.js",[],"/Users/nesarakishor/Desktop/YearOne/movie-data-app/src/Components/MovieRatings.js",[],"/Users/nesarakishor/Desktop/YearOne/movie-data-app/src/Components/NavBar.js",[],"/Users/nesarakishor/Desktop/YearOne/movie-data-app/src/components/SingleMovieData.js",["62"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useLocation, useHistory } from \"react-router\";\nimport { Container, Button, Card, ListGroup } from \"react-bootstrap\";\n\n/* This component retrieves the movie data object sent via Link from the DisplayMovieTitles component by using useLocation(). A call is made to OMDBAPI (with the match by ID query) using the omdbID from the movie object. The response data includes additional information about the movie, including director, plot, etc). This data gets stored under the 'selectedMovie' state,\nwhich is then used to render the specfic details about the movie: (title, director, release year, plot, etc).\nThere is also an option to give a 'thumbs up' or 'thumbs down' rating. The rating is coded as upRating/downRating and sent along with the movie object as a POST request to the backend to update the database accordingly.\n */\n\nconst SingleMovieData = (props) => {\n  const [selectedMovie, setSelectedMovie] = useState({});\n  const location = useLocation();\n  const history = useHistory();\n  const movieObj = location.state.movieObj;\n\n  useEffect(() => {\n    const getFullData = async (movieObj) => {\n      try {\n        const response = await axios.get(\n          `http://www.omdbapi.com/?apikey=6befe58e&i=${movieObj.imdbID}`\n        );\n        const fullMovieData = response.data;\n        setSelectedMovie(fullMovieData);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    getFullData(movieObj);\n  }, []);\n\n  const recordRating = async (ratingType) => {\n    try {\n      await axios.post(\"http://localhost:8080/movieData/\", {\n        ratingType,\n        selectedMovie,\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const returnToSearch = () => {\n    history.goBack();\n  };\n\n  return (\n    <Container>\n      <Card className=\"mt-5 mb-3\">\n        <Card.Header>\n          <b>Rate This Movie</b>\n          <div className=\"mt-3 mb-3\">\n            <Button\n              variant=\"outline-success\"\n              className=\"mr-2\"\n              onClick={() => {\n                recordRating(\"upRatings\");\n              }}\n            >\n              <svg\n                width=\"1em\"\n                height=\"1em\"\n                viewBox=\"0 0 16 16\"\n                class=\"bi bi-hand-thumbs-up\"\n                fill=\"currentColor\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  fill-rule=\"evenodd\"\n                  d=\"M6.956 1.745C7.021.81 7.908.087 8.864.325l.261.066c.463.116.874.456 1.012.965.22.816.533 2.511.062 4.51a9.84 9.84 0 0 1 .443-.051c.713-.065 1.669-.072 2.516.21.518.173.994.681 1.2 1.273.184.532.16 1.162-.234 1.733.058.119.103.242.138.363.077.27.113.567.113.856 0 .289-.036.586-.113.856-.039.135-.09.273-.16.404.169.387.107.819-.003 1.148a3.163 3.163 0 0 1-.488.901c.054.152.076.312.076.465 0 .305-.089.625-.253.912C13.1 15.522 12.437 16 11.5 16v-1c.563 0 .901-.272 1.066-.56a.865.865 0 0 0 .121-.416c0-.12-.035-.165-.04-.17l-.354-.354.353-.354c.202-.201.407-.511.505-.804.104-.312.043-.441-.005-.488l-.353-.354.353-.354c.043-.042.105-.14.154-.315.048-.167.075-.37.075-.581 0-.211-.027-.414-.075-.581-.05-.174-.111-.273-.154-.315L12.793 9l.353-.354c.353-.352.373-.713.267-1.02-.122-.35-.396-.593-.571-.652-.653-.217-1.447-.224-2.11-.164a8.907 8.907 0 0 0-1.094.171l-.014.003-.003.001a.5.5 0 0 1-.595-.643 8.34 8.34 0 0 0 .145-4.726c-.03-.111-.128-.215-.288-.255l-.262-.065c-.306-.077-.642.156-.667.518-.075 1.082-.239 2.15-.482 2.85-.174.502-.603 1.268-1.238 1.977-.637.712-1.519 1.41-2.614 1.708-.394.108-.62.396-.62.65v4.002c0 .26.22.515.553.55 1.293.137 1.936.53 2.491.868l.04.025c.27.164.495.296.776.393.277.095.63.163 1.14.163h3.5v1H8c-.605 0-1.07-.081-1.466-.218a4.82 4.82 0 0 1-.97-.484l-.048-.03c-.504-.307-.999-.609-2.068-.722C2.682 14.464 2 13.846 2 13V9c0-.85.685-1.432 1.357-1.615.849-.232 1.574-.787 2.132-1.41.56-.627.914-1.28 1.039-1.639.199-.575.356-1.539.428-2.59z\"\n                />\n              </svg>\n            </Button>\n            <Button\n              variant=\"outline-danger\"\n              onClick={() => {\n                recordRating(\"downRatings\");\n              }}\n            >\n              <svg\n                width=\"1em\"\n                height=\"1em\"\n                viewBox=\"0 0 16 16\"\n                class=\"bi bi-hand-thumbs-down\"\n                fill=\"currentColor\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  fill-rule=\"evenodd\"\n                  d=\"M6.956 14.534c.065.936.952 1.659 1.908 1.42l.261-.065a1.378 1.378 0 0 0 1.012-.965c.22-.816.533-2.512.062-4.51.136.02.285.037.443.051.713.065 1.669.071 2.516-.211.518-.173.994-.68 1.2-1.272a1.896 1.896 0 0 0-.234-1.734c.058-.118.103-.242.138-.362.077-.27.113-.568.113-.857 0-.288-.036-.585-.113-.856a2.094 2.094 0 0 0-.16-.403c.169-.387.107-.82-.003-1.149a3.162 3.162 0 0 0-.488-.9c.054-.153.076-.313.076-.465a1.86 1.86 0 0 0-.253-.912C13.1.757 12.437.28 11.5.28v1c.563 0 .901.272 1.066.56.086.15.121.3.121.416 0 .12-.035.165-.04.17l-.354.353.353.354c.202.202.407.512.505.805.104.312.043.44-.005.488l-.353.353.353.354c.043.043.105.141.154.315.048.167.075.37.075.581 0 .212-.027.415-.075.582-.05.174-.111.272-.154.315l-.353.353.353.354c.353.352.373.714.267 1.021-.122.35-.396.593-.571.651-.653.218-1.447.224-2.11.164a8.907 8.907 0 0 1-1.094-.17l-.014-.004H9.62a.5.5 0 0 0-.595.643 8.34 8.34 0 0 1 .145 4.725c-.03.112-.128.215-.288.255l-.262.066c-.306.076-.642-.156-.667-.519-.075-1.081-.239-2.15-.482-2.85-.174-.502-.603-1.267-1.238-1.977C5.597 8.926 4.715 8.23 3.62 7.93 3.226 7.823 3 7.534 3 7.28V3.279c0-.26.22-.515.553-.55 1.293-.138 1.936-.53 2.491-.869l.04-.024c.27-.165.495-.296.776-.393.277-.096.63-.163 1.14-.163h3.5v-1H8c-.605 0-1.07.08-1.466.217a4.823 4.823 0 0 0-.97.485l-.048.029c-.504.308-.999.61-2.068.723C2.682 1.815 2 2.434 2 3.279v4c0 .851.685 1.433 1.357 1.616.849.232 1.574.787 2.132 1.41.56.626.914 1.28 1.039 1.638.199.575.356 1.54.428 2.591z\"\n                />\n              </svg>\n            </Button>\n          </div>\n        </Card.Header>\n        <ListGroup variant=\"flush\">\n          <ListGroup.Item>\n            <b>Title:</b> {selectedMovie.Title}\n          </ListGroup.Item>\n          <ListGroup.Item>\n            <b>Director:</b> {selectedMovie.Director}\n          </ListGroup.Item>\n          <ListGroup.Item>\n            <b>Release Year:</b> {selectedMovie.Year}\n          </ListGroup.Item>\n          <ListGroup.Item>\n            <b>Plot:</b> {selectedMovie.Plot}\n          </ListGroup.Item>\n          <ListGroup.Item>\n            <b>Awards:</b> {selectedMovie.Awards}\n          </ListGroup.Item>\n          <ListGroup.Item>\n            <b>Country:</b> {selectedMovie.Country}\n          </ListGroup.Item>\n          <ListGroup.Item>\n            <b>Genre:</b> {selectedMovie.Genre}\n          </ListGroup.Item>\n          <ListGroup.Item>\n            <b>Cast:</b> {selectedMovie.Actors}\n          </ListGroup.Item>\n          <ListGroup.Item>\n            <img src={selectedMovie.Poster} alt=\"img\" />\n          </ListGroup.Item>\n        </ListGroup>\n      </Card>\n\n      <div className=\"mt-3 mb-3\">\n        <Button variant=\"outline-primary\" onClick={returnToSearch}>\n          Return To Homepage\n        </Button>\n      </div>\n    </Container>\n  );\n};\n\nexport default SingleMovieData;\n","/Users/nesarakishor/Desktop/YearOne/movie-data-app/src/components/DisplayMovieTitles.js",[],"/Users/nesarakishor/Desktop/YearOne/movie-data-app/src/components/MovieRatings.js",[],["63","64"],"/Users/nesarakishor/Desktop/YearOne/movie-data-app/src/components/NavBar.js",[],"/Users/nesarakishor/Desktop/YearOne/movie-data-app/src/components/MovieSearch.js",["65"],{"ruleId":"66","severity":1,"message":"67","line":41,"column":35,"nodeType":"68","endLine":41,"endColumn":46},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"66","severity":1,"message":"73","line":32,"column":6,"nodeType":"74","endLine":32,"endColumn":8,"suggestions":"75"},{"ruleId":"69","replacedBy":"76"},{"ruleId":"71","replacedBy":"77"},{"ruleId":"66","severity":1,"message":"73","line":30,"column":6,"nodeType":"74","endLine":30,"endColumn":8,"suggestions":"78"},{"ruleId":"69","replacedBy":"79"},{"ruleId":"71","replacedBy":"80"},{"ruleId":"66","severity":1,"message":"67","line":45,"column":35,"nodeType":"68","endLine":45,"endColumn":46},"react-hooks/exhaustive-deps","React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","Identifier","no-native-reassign",["81"],"no-negated-in-lhs",["82"],"React Hook useEffect has a missing dependency: 'movieObj'. Either include it or remove the dependency array.","ArrayExpression",["83"],["81"],["82"],["84"],["81"],["82"],"no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},{"desc":"85","fix":"87"},"Update the dependencies array to be: [movieObj]",{"range":"88","text":"89"},{"range":"90","text":"89"},[1607,1609],"[movieObj]",[1513,1515]]